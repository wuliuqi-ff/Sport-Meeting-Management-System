{"remainingRequest":"C:\\Users\\asus\\SchoolSportsMeetingManagementSystem\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\asus\\SchoolSportsMeetingManagementSystem\\front\\src\\views\\modules\\bisaixiangmuYuyue\\add-or-update.vue?vue&type=template&id=162b0876","dependencies":[{"path":"C:\\Users\\asus\\SchoolSportsMeetingManagementSystem\\front\\src\\views\\modules\\bisaixiangmuYuyue\\add-or-update.vue","mtime":1753603900397},{"path":"C:\\Users\\asus\\SchoolSportsMeetingManagementSystem\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753355015215},{"path":"C:\\Users\\asus\\SchoolSportsMeetingManagementSystem\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753355015215},{"path":"C:\\Users\\asus\\SchoolSportsMeetingManagementSystem\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1753355016477},{"path":"C:\\Users\\asus\\SchoolSportsMeetingManagementSystem\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1753355017526},{"path":"C:\\Users\\asus\\SchoolSportsMeetingManagementSystem\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753355015215},{"path":"C:\\Users\\asus\\SchoolSportsMeetingManagementSystem\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1753355017011}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}