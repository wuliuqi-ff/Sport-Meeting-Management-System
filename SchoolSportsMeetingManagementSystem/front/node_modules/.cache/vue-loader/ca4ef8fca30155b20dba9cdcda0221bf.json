{"remainingRequest":"C:\\Users\\asus\\SchoolSportsMeetingManagementSystem\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\asus\\SchoolSportsMeetingManagementSystem\\front\\src\\views\\modules\\dictionaryBisaixiangmuYuyueYesno\\add-or-update.vue?vue&type=style&index=0&id=3e45a930&lang=scss&scoped=true","dependencies":[{"path":"C:\\Users\\asus\\SchoolSportsMeetingManagementSystem\\front\\src\\views\\modules\\dictionaryBisaixiangmuYuyueYesno\\add-or-update.vue","mtime":1753604250961},{"path":"C:\\Users\\asus\\SchoolSportsMeetingManagementSystem\\front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1753355015846},{"path":"C:\\Users\\asus\\SchoolSportsMeetingManagementSystem\\front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1753355017484},{"path":"C:\\Users\\asus\\SchoolSportsMeetingManagementSystem\\front\\node_modules\\postcss-loader\\src\\index.js","mtime":1753355016477},{"path":"C:\\Users\\asus\\SchoolSportsMeetingManagementSystem\\front\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1753355015215},{"path":"C:\\Users\\asus\\SchoolSportsMeetingManagementSystem\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753355015215},{"path":"C:\\Users\\asus\\SchoolSportsMeetingManagementSystem\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1753355017011}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovLyDkv53mjIHkuI7kuIrkuIDkuKrku6PnoIHkuIDoh7TnmoTmoLflvI/nu5PmnoQNCi5hZGRFZGl0LWJsb2NrIHsNCiAgbWFyZ2luOiAtMTBweDsNCiAgcGFkZGluZzogMTBweDsNCn0NCg0KLmRldGFpbC1mb3JtLWNvbnRlbnQgew0KICBwYWRkaW5nOiAxMnB4Ow0KICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsNCn0NCg0KLy8g6L6T5YWl5qGG5LiO5oyJ6ZKu5qC35byP6KGl5YWFDQouaW5wdXQgew0KICBtYXJnaW4tYm90dG9tOiAxNXB4Ow0KfQ0KDQouYnRuIHsNCiAgbWFyZ2luLXRvcDogMjBweDsNCiAgdGV4dC1hbGlnbjogcmlnaHQ7DQoNCiAgLmVsLWJ1dHRvbiB7DQogICAgcGFkZGluZzogMCAxNXB4Ow0KICAgIG1hcmdpbi1sZWZ0OiAxMHB4Ow0KDQogICAgJjpmaXJzdC1jaGlsZCB7DQogICAgICBtYXJnaW4tbGVmdDogMDsNCiAgICB9DQogIH0NCn0NCg0KLy8g5paH5pys5Z+f5qC35byP6YCC6YWNDQouZWwtdGV4dGFyZWEgew0KICB3aWR0aDogMTAwJTsNCn0NCg=="},{"version":3,"sources":["add-or-update.vue"],"names":[],"mappings":";AAoTA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"add-or-update.vue","sourceRoot":"src/views/modules/dictionaryBisaixiangmuYuyueYesno","sourcesContent":["<template>\r\n  <div class=\"addEdit-block\">\r\n    <el-form\r\n      class=\"detail-form-content\"\r\n      ref=\"ruleForm\"\r\n      :model=\"ruleForm\"\r\n      :rules=\"rules\"\r\n      label-width=\"auto\"\r\n    >\r\n      <el-row>\r\n        <!-- 审核状态编码 -->\r\n        <el-col :span=\"12\">\r\n          <el-form-item class=\"input\" v-if=\"type !== 'info'\" label=\"审核状态编码\" prop=\"codeIndex\">\r\n            <el-input \r\n              v-model=\"ruleForm.codeIndex\"\r\n              placeholder=\"审核状态编码\" \r\n              clearable  \r\n              :readonly=\"ro.codeIndex\"\r\n            />\r\n          </el-form-item>\r\n          <div v-else>\r\n            <el-form-item class=\"input\" label=\"审核状态编码\" prop=\"codeIndex\">\r\n              <el-input \r\n                v-model=\"ruleForm.codeIndex\"\r\n                placeholder=\"审核状态编码\" \r\n                readonly\r\n              />\r\n            </el-form-item>\r\n          </div>\r\n        </el-col>\r\n\r\n        <!-- 审核状态 -->\r\n        <el-col :span=\"12\">\r\n          <el-form-item class=\"input\" v-if=\"type !== 'info'\" label=\"审核状态\" prop=\"indexName\">\r\n            <el-input \r\n              v-model=\"ruleForm.indexName\"\r\n              placeholder=\"审核状态\" \r\n              clearable  \r\n              :readonly=\"ro.indexName\"\r\n            />\r\n          </el-form-item>\r\n          <div v-else>\r\n            <el-form-item class=\"input\" label=\"审核状态\" prop=\"indexName\">\r\n              <el-input \r\n                v-model=\"ruleForm.indexName\"\r\n                placeholder=\"审核状态\" \r\n                readonly\r\n              />\r\n            </el-form-item>\r\n          </div>\r\n        </el-col>\r\n\r\n        <!-- 备注（保留注释，与上一个代码结构对齐） -->\r\n        <el-col :span=\"24\">\r\n          <el-form-item class=\"input\" v-if=\"type !== 'info'\" label=\"备注\" prop=\"beizhu\">\r\n            <el-input \r\n              v-model=\"ruleForm.beizhu\"\r\n              placeholder=\"备注\" \r\n              clearable  \r\n              :readonly=\"ro.beizhu\"\r\n              type=\"textarea\"\r\n              rows=\"3\"\r\n            />\r\n          </el-form-item>\r\n          <div v-else>\r\n            <el-form-item class=\"input\" label=\"备注\" prop=\"beizhu\">\r\n              <el-input \r\n                v-model=\"ruleForm.beizhu\"\r\n                placeholder=\"备注\" \r\n                readonly\r\n                type=\"textarea\"\r\n                rows=\"3\"\r\n              />\r\n            </el-form-item>\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 操作按钮 -->\r\n      <el-form-item class=\"btn\">\r\n        <el-button \r\n          v-if=\"type !== 'info'\" \r\n          type=\"primary\" \r\n          class=\"btn-success\" \r\n          @click=\"onSubmit\"\r\n        >\r\n          提交\r\n        </el-button>\r\n        <el-button \r\n          v-if=\"type !== 'info'\" \r\n          class=\"btn-close\" \r\n          @click=\"back()\"\r\n        >\r\n          取消\r\n        </el-button>\r\n        <el-button \r\n          v-if=\"type === 'info'\" \r\n          class=\"btn-close\" \r\n          @click=\"back()\"\r\n        >\r\n          返回\r\n        </el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport styleJs from \"../../../utils/style.js\";\r\nimport { isNumber, isIntNumer, isEmail, isPhone, isMobile, isURL, checkIdCard } from \"@/utils/validate\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      addEditForm: null, // 样式配置对象\r\n      id: \"\", // 当前操作ID\r\n      type: \"\", // 操作类型（info/edit等）\r\n      // 只读状态配置（按字段控制）\r\n      ro: {\r\n        codeIndex: true,\r\n        indexName: false,\r\n        beizhu: false,\r\n      },\r\n      // 表单数据\r\n      ruleForm: {\r\n        codeIndex: \"\", // 审核状态编码\r\n        indexName: \"\", // 审核状态\r\n        beizhu: \"\", // 备注\r\n      },\r\n      // 表单验证规则\r\n      rules: {\r\n        codeIndex: [\r\n          { required: true, message: \"审核状态编码不能为空\", trigger: \"blur\" },\r\n          { pattern: /^[0-9]*$/, message: \"编码只能为数字\", trigger: \"blur\" }\r\n        ],\r\n        indexName: [\r\n          { required: true, message: \"审核状态不能为空\", trigger: \"blur\" },\r\n          { min: 2, max: 20, message: \"状态名称长度在2-20字符之间\", trigger: \"blur\" }\r\n        ],\r\n        beizhu: [\r\n          { max: 500, message: \"备注最多500字符\", trigger: \"blur\" }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  props: [\"parent\"], // 接收父组件实例\r\n  computed: {},\r\n  created() {\r\n    // 初始化样式配置\r\n    this.addEditForm = styleJs.addStyle();\r\n    this.addEditStyleChange();\r\n    this.addEditUploadStyleChange();\r\n  },\r\n  methods: {\r\n    // 初始化表单数据\r\n    init(id, type) {\r\n      this.id = id || \"\";\r\n      this.type = type || \"\";\r\n      // 详情模式加载数据\r\n      if (this.type === \"info\" || this.type === \"else\") {\r\n        this.loadDetailData(id);\r\n      } else {\r\n        // 新增/编辑模式：加载编码最大值（保持原有业务逻辑）\r\n        this.loadMaxCodeIndex();\r\n      }\r\n    },\r\n\r\n    // 加载详情数据\r\n    loadDetailData(id) {\r\n      this.$http({\r\n        url: `dictionary/info/${id}`,\r\n        method: \"get\"\r\n      }).then(({ data }) => {\r\n        if (data && data.code === 0) {\r\n          this.ruleForm = { ...data.data };\r\n        } else {\r\n          this.$message.error(data.msg || \"加载数据失败\");\r\n        }\r\n      }).catch(err => {\r\n        this.$message.error(\"请求异常：\" + err.message);\r\n      });\r\n    },\r\n\r\n    // 加载最大编码值（用于新增时自动填充）\r\n    loadMaxCodeIndex() {\r\n      this.$http({\r\n        url: \"dictionary/maxCodeIndex\",\r\n        method: \"post\",\r\n        data: { dicCode: \"bisaixiangmu_yuyue_yesno_types\" }\r\n      }).then(({ data }) => {\r\n        if (data && data.code === 0) {\r\n          this.ruleForm.codeIndex = data.maxCodeIndex || \"\";\r\n        } else {\r\n          this.$message.error(data.msg || \"获取编码失败\");\r\n        }\r\n      }).catch(err => {\r\n        this.$message.error(\"请求异常：\" + err.message);\r\n      });\r\n    },\r\n\r\n    // 提交表单\r\n    onSubmit() {\r\n      this.$refs.ruleForm.validate(valid => {\r\n        if (valid) {\r\n          // 补充业务字段（保持原有逻辑）\r\n          const submitData = {\r\n            ...this.ruleForm,\r\n            dicCode: \"bisaixiangmu_yuyue_yesno_types\",\r\n            dicName: \"审核状态\"\r\n          };\r\n          // 提交请求\r\n          this.$http({\r\n            url: `dictionary/${this.ruleForm.id ? \"update\" : \"save\"}`,\r\n            method: \"post\",\r\n            data: submitData\r\n          }).then(({ data }) => {\r\n            if (data && data.code === 0) {\r\n              this.$message({\r\n                message: \"操作成功\",\r\n                type: \"success\",\r\n                duration: 1500,\r\n                onClose: () => {\r\n                  // 关闭弹窗并刷新父组件数据（与上一个代码回调一致）\r\n                  this.parent.showFlag = true;\r\n                  this.parent.addOrUpdateFlag = false;\r\n                  this.parent.dictionaryCrossAddOrUpdateFlag = false;\r\n                  this.parent.search();\r\n                  this.parent.contentStyleChange();\r\n                }\r\n              });\r\n            } else {\r\n              this.$message.error(data.msg || \"操作失败\");\r\n            }\r\n          }).catch(err => {\r\n            this.$message.error(\"提交异常：\" + err.message);\r\n          });\r\n        }\r\n      });\r\n    },\r\n\r\n    // 返回/取消\r\n    back() {\r\n      this.parent.showFlag = true;\r\n      this.parent.addOrUpdateFlag = false;\r\n      this.parent.dictionaryCrossAddOrUpdateFlag = false;\r\n      this.parent.contentStyleChange();\r\n    },\r\n\r\n    // 样式调整：统一表单控件样式（与上一个代码选择器一致）\r\n    addEditStyleChange() {\r\n      this.$nextTick(() => {\r\n        // 输入框样式\r\n        document.querySelectorAll(\".addEdit-block .input .el-input__inner, .addEdit-block .input .el-textarea__inner\").forEach(el => {\r\n          el.style.height = this.addEditForm.inputHeight;\r\n          el.style.color = this.addEditForm.inputFontColor;\r\n          el.style.fontSize = this.addEditForm.inputFontSize;\r\n          el.style.borderWidth = this.addEditForm.inputBorderWidth;\r\n          el.style.borderStyle = this.addEditForm.inputBorderStyle;\r\n          el.style.borderColor = this.addEditForm.inputBorderColor;\r\n          el.style.borderRadius = this.addEditForm.inputBorderRadius;\r\n          el.style.backgroundColor = this.addEditForm.inputBgColor;\r\n        });\r\n\r\n        // 标签样式\r\n        document.querySelectorAll(\".addEdit-block .input .el-form-item__label\").forEach(el => {\r\n          el.style.lineHeight = this.addEditForm.inputHeight;\r\n          el.style.color = this.addEditForm.inputLableColor;\r\n          el.style.fontSize = this.addEditForm.inputLableFontSize;\r\n        });\r\n\r\n        // 按钮样式\r\n        document.querySelectorAll(\".addEdit-block .btn .btn-success\").forEach(el => {\r\n          el.style.width = this.addEditForm.btnSaveWidth;\r\n          el.style.height = this.addEditForm.btnSaveHeight;\r\n          el.style.color = this.addEditForm.btnSaveFontColor;\r\n          el.style.fontSize = this.addEditForm.btnSaveFontSize;\r\n          el.style.borderWidth = this.addEditForm.btnSaveBorderWidth;\r\n          el.style.borderStyle = this.addEditForm.btnSaveBorderStyle;\r\n          el.style.borderColor = this.addEditForm.btnSaveBorderColor;\r\n          el.style.borderRadius = this.addEditForm.btnSaveBorderRadius;\r\n          el.style.backgroundColor = this.addEditForm.btnSaveBgColor;\r\n        });\r\n\r\n        document.querySelectorAll(\".addEdit-block .btn .btn-close\").forEach(el => {\r\n          el.style.width = this.addEditForm.btnCancelWidth;\r\n          el.style.height = this.addEditForm.btnCancelHeight;\r\n          el.style.color = this.addEditForm.btnCancelFontColor;\r\n          el.style.fontSize = this.addEditForm.btnCancelFontSize;\r\n          el.style.borderWidth = this.addEditForm.btnCancelBorderWidth;\r\n          el.style.borderStyle = this.addEditForm.btnCancelBorderStyle;\r\n          el.style.borderColor = this.addEditForm.btnCancelBorderColor;\r\n          el.style.borderRadius = this.addEditForm.btnCancelBorderRadius;\r\n          el.style.backgroundColor = this.addEditForm.btnCancelBgColor;\r\n        });\r\n      });\r\n    },\r\n\r\n    // 上传样式调整（保持方法结构，适配当前无上传控件的场景）\r\n    addEditUploadStyleChange() {\r\n      this.$nextTick(() => {\r\n        // 若后续添加上传控件，可在此补充样式逻辑（与上一个代码保持一致）\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n// 保持与上一个代码一致的样式结构\r\n.addEdit-block {\r\n  margin: -10px;\r\n  padding: 10px;\r\n}\r\n\r\n.detail-form-content {\r\n  padding: 12px;\r\n  background-color: transparent;\r\n}\r\n\r\n// 输入框与按钮样式补充\r\n.input {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.btn {\r\n  margin-top: 20px;\r\n  text-align: right;\r\n\r\n  .el-button {\r\n    padding: 0 15px;\r\n    margin-left: 10px;\r\n\r\n    &:first-child {\r\n      margin-left: 0;\r\n    }\r\n  }\r\n}\r\n\r\n// 文本域样式适配\r\n.el-textarea {\r\n  width: 100%;\r\n}\r\n</style>"]}]}