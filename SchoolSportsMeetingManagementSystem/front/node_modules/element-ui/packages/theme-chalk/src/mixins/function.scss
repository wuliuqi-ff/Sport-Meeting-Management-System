// 引入 Sass 元数据模块（若需调试可保留，仅用 meta.inspect 时可简化）
@use "sass:meta" as meta;
@use "sass:string" as string;
// 引入配置文件（确保 config.scss 定义了 $modifier-separator、$state-prefix）
@import "config";
// 将选择器转为字符串（优化调试与字符串处理）
@function selectorToString($selector) {
    $inspected: meta.inspect($selector);
    @return string.slice($inspected, 2, -2);
}

// 检测是否包含修饰符分隔符（如 Element-UI 的 "--"）
@function containsModifier($selector) {
    $selector-str: selectorToString($selector);
    @return string.index($selector-str, $modifier-separator) !=null;
}

// 检测是否包含状态前缀（如 Element-UI 的 "is-"）
@function containWhenFlag($selector) {
    $selector-str: selectorToString($selector);
    $state-pattern: '.' + $state-prefix;
    @return string.index($selector-str, $state-pattern) !=null;
}

// 检测是否包含伪类（如 :hover、:active 等）
@function containPseudoClass($selector) {
    $selector-str: selectorToString($selector);
    @return string.index($selector-str, ':') !=null;
}

// 检测是否命中特殊嵌套规则（修饰符/状态/伪类）
@function hitAllSpecialNestRule($selector) {
    @return containsModifier($selector) or containWhenFlag($selector) or containPseudoClass($selector);
}